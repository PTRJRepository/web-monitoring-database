<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monitoring Tunjangan Beras</title>
    
    <!-- Resource Hints untuk preload resource penting -->
    <link rel="preconnect" href="https://cdn.jsdelivr.net">
    <link rel="preconnect" href="https://cdnjs.cloudflare.com">
    <link rel="preconnect" href="https://cdn.datatables.net">
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/chart.js" as="script">
    
    <!-- External CSS dari CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/buttons/2.4.2/css/buttons.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/fixedheader/3.4.0/css/fixedHeader.bootstrap5.min.css" rel="stylesheet">
    
    <!-- Chart.js untuk grafik -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Local CSS yang valid -->
    <link href="/css/style.css" rel="stylesheet">
    
    <!-- Inline styles -->
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #858796;
            --success-color: #1cc88a;
            --info-color: #36b9cc;
            --warning-color: #f6c23e;
            --danger-color: #e74a3b;
            --light-color: #f8f9fc;
            --dark-color: #5a5c69;
        }
        
        body {
            background-color: #f8f9fa;
            color: #333;
            font-family: 'Nunito', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            font-size: 0.9rem;
        }
        
        /* Filter styles telah dihapus */
        
        /* Loading Overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.9);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            flex-direction: column;
            text-align: center;
        }
        
        .loading-content {
            text-align: center;
            color: white;
        }
        
        /* Toast Container */
        .toast-container {
            z-index: 9999;
        }
        
        .warning-row { 
            background-color: rgba(255, 193, 7, 0.1) !important; 
            color: #856404;
            border-left: 4px solid var(--warning-color) !important;
        }
        
        .error-row { 
            background-color: rgba(220, 53, 69, 0.1) !important; 
            color: #721c24;
            border-left: 4px solid var(--error-color) !important;
        }

        .refresh-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

        .refresh-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .last-check {
            position: fixed;
            bottom: 20px;
            left: 20px;
            z-index: 1000;
            padding: 10px 15px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .config-section {
            background-color: white;
            padding: 25px;
            margin-bottom: 25px;
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
        }

        .config-section:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .nav-tabs {
            margin-bottom: 25px;
            border-bottom: 2px solid #dee2e6;
        }

        .nav-tabs .nav-link {
            border: none;
            color: #666;
            padding: 12px 20px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .nav-tabs .nav-link.active {
            color: var(--primary-color);
            border-bottom: 3px solid var(--primary-color);
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .table {
            margin-bottom: 0;
        }

        .table thead th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
            font-weight: 600;
            color: #444;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .stats-card {
            padding: 20px;
            border-radius: 8px;
            color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: all 0.3s;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .stats-card .card-title {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .stats-card .card-text {
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
        }

        .form-control, .form-select {
            border-radius: 8px;
            padding: 10px 15px;
            border: 1px solid #dee2e6;
            transition: all 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(33, 150, 243, 0.1);
        }

        .btn {
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border: none;
        }

        .btn-primary:hover {
            background-color: #1976D2;
            transform: translateY(-1px);
        }

        .monitoring-stats {
            background-color: white;
            border-radius: 12px;
            padding: 20px;
            margin-top: 25px;
        }

        .monitoring-stats h4 {
            color: #444;
            font-size: 1.1rem;
            margin-bottom: 20px;
            font-weight: 600;
        }

        .table-responsive {
            border-radius: 12px;
            background: white;
            padding: 15px;
            max-width: 100%;
            overflow-x: auto;
        }

        .table {
            width: 100%;
            table-layout: auto;
        }

        .table th, .table td {
            white-space: nowrap;
            padding: 8px 12px;
        }

        .dataTables_wrapper .dataTables_filter input {
            border-radius: 8px;
            padding: 6px 12px;
            border: 1px solid #dee2e6;
        }

        .dataTables_wrapper .dataTables_length select {
            border-radius: 8px;
            padding: 6px 28px 6px 12px;
            border: 1px solid #dee2e6;
        }

        /* Loading spinner */
        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Toast notification */
        .toast {
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            margin-bottom: 10px;
            min-width: 250px;
        }

        .toast-header {
            border-radius: 8px 8px 0 0;
            padding: 12px 15px;
        }

        .toast-body {
            padding: 12px 15px;
        }

        /* Loading overlay styles */
        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 20px;
        }

        .loading-text {
            font-size: 1.2rem;
            color: #333;
            text-align: center;
            max-width: 80%;
        }

        .loading-details {
            margin-top: 15px;
            padding: 10px 20px;
            background: #f8f9fa;
            border-radius: 8px;
            font-size: 0.9rem;
            color: #666;
        }

        .selected-row {
            background-color: #e8f4ff !important;
            color: #0d47a1;
            border-left: 4px solid #2196F3;
            animation: selectedRowPulse 2s infinite;
            position: relative;
            overflow: hidden;
            transition: all 0.3s;
        }

        .selected-row:hover {
            background-color: #BBDEFB !important;
            transform: scale(1.02) translateY(-2px);
            box-shadow: 0 8px 20px rgba(13, 71, 161, 0.5);
        }

        .selected-row td {
            color: #0D47A1 !important;
            font-weight: 700;
        }

        .warning-row.selected-row {
            background-color: #FFF3E0 !important;
            color: #E65100 !important;
            border-left: 8px solid #FB8C00 !important;
            box-shadow: 0 6px 16px rgba(230, 81, 0, 0.4);
        }

        .warning-row.selected-row td {
            color: #E65100 !important;
            font-weight: 700;
        }

        .error-row.selected-row {
            background-color: #FFEBEE !important;
            color: #C62828 !important;
            border-left: 8px solid #E53935 !important;
            box-shadow: 0 6px 16px rgba(198, 40, 40, 0.4);
        }

        .error-row.selected-row td {
            color: #C62828 !important;
            font-weight: 700;
        }

        .selected-row td::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                to right,
                rgba(255,255,255,0) 0%,
                rgba(255,255,255,0.5) 50%,
                rgba(255,255,255,0) 100%
            );
            transform: translateX(-100%);
            animation: shimmer 2s infinite;
        }

        @keyframes selectedRowPulse {
            0% { box-shadow: 0 6px 16px rgba(13, 71, 161, 0.2); }
            50% { box-shadow: 0 8px 24px rgba(13, 71, 161, 0.3); }
            100% { box-shadow: 0 6px 16px rgba(13, 71, 161, 0.2); }
        }

        .selected-row {
            animation: selectedRowPulse 2s infinite;
        }

        .selected-row td {
            position: relative;
            overflow: hidden;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .navbar-brand {
            font-weight: 700;
        }
        .stats-card {
            padding: 1rem;
            border-radius: 0.5rem;
            color: white;
            height: 100%;
        }
        .stats-card .card-title {
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }
        .stats-card .card-text {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 0;
        }
        .bg-primary {
            background-color: #4e73df !important;
        }
        .bg-success {
            background-color: #1cc88a !important;
        }
        .bg-info {
            background-color: #36b9cc !important;
        }
        .bg-warning {
            background-color: #f6c23e !important;
        }
        .bg-danger {
            background-color: #e74a3b !important;
        }
        .table-responsive {
            margin-bottom: 1rem;
        }
        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            border: none;
            border-radius: 0.5rem;
            overflow: hidden;
        }
        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }
        .nav-pills .nav-link.active {
            background-color: #4e73df;
        }
        .nav-pills .nav-link {
            color: #5a5c69;
            font-weight: 500;
        }
        .nav-pills .nav-link:hover {
            color: #4e73df;
        }
        .table thead th {
            background-color: #f8f9fc;
            color: #5a5c69;
            font-weight: 600;
            border-bottom: 2px solid #e3e6f0;
            vertical-align: middle;
            text-align: center;
            white-space: normal;
            word-wrap: break-word;
            min-width: 100px;
            max-width: 200px;
            padding: 10px 5px;
            font-size: 0.85rem;
        }
        .table tbody td {
            vertical-align: middle;
            padding: 0.5rem;
            font-size: 0.85rem;
        }
        .badge {
            font-weight: 600;
        }
        .timeline-chart-container {
            height: 300px;
        }
        #loadingOverlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }
        #loadingSpinner {
            width: 3rem;
            height: 3rem;
        }
        .config-section {
            margin-top: 2rem;
            margin-bottom: 2rem;
        }
        .btn-export {
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
        }
        .export-options {
            margin-bottom: 1rem;
        }
        .dataTables_wrapper .dataTables_filter {
            margin-bottom: 1rem;
        }
        .dataTables_wrapper .dataTables_length {
            margin-bottom: 1rem;
        }
        .dataTables_wrapper .dataTables_info {
            padding-top: 1rem;
        }
        
        /* Semua CSS terkait pagination telah dihapus */
        
        /* Style untuk navigasi halaman kustom */
        .custom-pagination {
            background-color: #f8f9fa;
            padding: 10px 15px;
            border-radius: 5px;
            border: 1px solid #e3e6f0;
            margin: 15px 0;
        }
        
        .custom-pagination .page-info {
            font-size: 14px;
            color: #5a5c69;
        }
        
        .custom-pagination .btn {
            padding: 5px 10px;
            font-size: 13px;
        }
        
        .custom-pagination .btn i {
            margin: 0 2px;
        }
        
        /* Style untuk kotak pencarian kustom */
        .search-container {
            margin-bottom: 15px;
        }
        
        .search-container .input-group {
            max-width: 350px;
        }
        
        /* Semua style untuk tombol pagination telah dihapus */
        
        .period-info {
            background-color: #4e73df;
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .period-info h4 {
            margin: 0;
            font-weight: 600;
        }
        
        .period-info p {
            margin: 5px 0 0;
            font-size: 0.95rem;
        }
    </style>

    <!-- CSS untuk filter telah dihapus -->
</head>
<body>
    <!-- Add this near the top of the body -->
    <div id="dataLoadingStatus" class="alert alert-info" style="display: none;">
        <strong>Memuat Data...</strong> Mohon tunggu sebentar.
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
        <div class="loading-text">
            <div id="loadingText"><i class="fas fa-database me-2"></i>Mengambil data langsung dari database...</div>
            <div class="loading-details">
                <p><i class="fas fa-sync-alt me-2"></i>Status: <span id="loadingStatus">Menjalankan query ke database</span></p>
                <p><i class="fas fa-clock me-2"></i>Waktu: <span id="loadingTime">Sedang diproses...</span></p>
            </div>
            <div id="connectionError" class="alert alert-danger mt-3" style="display: none;">
                <strong><i class="fas fa-exclamation-triangle me-2"></i>Error Koneksi:</strong>
                <span id="errorMessage">Tidak dapat terhubung ke database</span>
                <div class="mt-2">
                    <button id="retryConnection" class="btn btn-sm btn-danger">
                        <i class="fas fa-sync me-1"></i> Coba Lagi
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast container for notifications -->
    <div class="toast-container position-fixed top-0 end-0 p-3"></div>

    <div class="container-fluid mt-4">
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-database me-2"></i>Monitoring Database
                                <span id="db-status-indicator" class="ms-2 badge bg-secondary"><i class="fas fa-sync fa-spin"></i> Memeriksa...</span>
                                <button id="refresh-db-status" class="btn btn-sm btn-outline-secondary ms-2" title="Periksa koneksi database">
                                    <i class="fas fa-sync-alt"></i>
                                </button>
                            </h5>
                            <div>
                                <button id="refreshAllBtn" class="btn btn-primary me-2">
                                    <i class="fas fa-sync-alt me-1"></i>Refresh Semua Data
                                </button>
                                <span class="text-muted">Terakhir diperbarui: <span id="lastUpdated">-</span></span>
                            </div>
                        </div>
                        
                        <% if (typeof taxMonthData !== 'undefined' && taxMonthData) { %>
                        <div class="period-info mt-3">
                            <h4>Periode Pembukuan: <%= taxMonthData.ProcessMonthName %> <%= taxMonthData.ProcessYear %></h4>
                            <p>Periode Akuntansi: <%= taxMonthData.NextAccMonth %> | Bulan Kalender: <%= taxMonthData.CalendarMonth %> | Tahun: <%= taxMonthData.ProcessYear %></p>
                            <p>Tanggal Proses: <%= taxMonthData.ProcessDate ? new Date(taxMonthData.ProcessDate).toLocaleDateString('id-ID') : '-' %> | 
                            Terakhir Diproses: <%= taxMonthData.LastProcessDate ? new Date(taxMonthData.LastProcessDate).toLocaleDateString('id-ID') : '-' %></p>
                        </div>
                        <% } else { %>
                        <div class="period-info mt-3 bg-warning">
                            <h4>Data Periode Pembukuan Tidak Tersedia</h4>
                            <p>Terjadi masalah saat mengambil data dari database. Silakan periksa koneksi database.</p>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="monitoring-tab" data-bs-toggle="tab" data-bs-target="#monitoring-section" type="button" role="tab" aria-controls="monitoring-section" aria-selected="true">
                    <i class="fas fa-chart-line me-2"></i>Monitoring Data
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="config-tab" data-bs-toggle="tab" data-bs-target="#config-section" type="button" role="tab" aria-controls="config-section" aria-selected="false">
                    <i class="fas fa-cog me-2"></i>Konfigurasi
                </button>
            </li>
        </ul>

        <div class="tab-content" id="mainTabContent">
            <div class="tab-pane fade show active" id="monitoring-section" role="tabpanel" aria-labelledby="monitoring-tab">
                <h1 class="h3 mb-4">Monitoring Database</h1>
                
                <!-- Dynamic Summary Card - Will show data based on selected tab -->
                <div class="card mb-4" id="dynamic-summary-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0" id="dynamic-summary-title">Ringkasan Data</h5>
                        <div class="btn-group">
                            <button class="btn btn-sm btn-outline-primary" id="dynamic-chart-bar">
                                <i class="fas fa-chart-bar"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-primary" id="dynamic-chart-pie">
                                <i class="fas fa-chart-pie"></i>
                                </button>
                            </div>
                        </div>
                    <div class="card-body">
                        <canvas id="dynamic-summary-chart" height="250" width="100%" style="height: 250px !important; max-height: 250px;"></canvas>
                        <div class="row mt-3" id="dynamic-summary-stats">
                            <!-- Stats will be generated dynamically by JavaScript -->
                    </div>
                    </div>
                </div>

                <!-- Navigation pills for data types -->
                <ul class="nav nav-pills mb-4" id="dataTypeTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="tunjangan-tab" data-bs-toggle="pill" data-bs-target="#tunjangan-data" type="button" role="tab">
                                <i class="fas fa-money-bill-wave me-2"></i>Tunjangan Beras
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="bpjs-tab" data-bs-toggle="pill" data-bs-target="#bpjs-data" type="button" role="tab">
                                <i class="fas fa-heartbeat me-2"></i>BPJS
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="gwscanner-tab" data-bs-toggle="pill" data-bs-target="#gwscanner-data" type="button" role="tab">
                                <i class="fas fa-qrcode me-2"></i>GWScanner
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="ffbworker-tab" data-bs-toggle="pill" data-bs-target="#ffbworker-data" type="button" role="tab">
                                <i class="fas fa-users me-2"></i>FFB Worker
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="gwscanner-overtime-tab" data-bs-toggle="pill" data-bs-target="#gwscanner-overtime-data" type="button" role="tab">
                                <i class="fas fa-sync-alt me-2"></i>GWScanner-Overtime
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="gwscanner-taskreg-tab" data-bs-toggle="pill" data-bs-target="#gwscanner-taskreg-data" type="button" role="tab">
                                <i class="fas fa-clipboard-check me-2"></i>Checkroll_not_Sync_Gwscanner_Taskreg
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="history-tab" data-bs-toggle="pill" data-bs-target="#history-data" type="button" role="tab">
                                <i class="fas fa-history me-2"></i>History Query
                            </button>
                        </li>
                    </ul>
                
                <!-- Tunjangan Beras Stats Cards -->
                <div class="row mb-4" id="tunjangan-stats" style="display: none;">
                    <div class="col-md-3">
                        <div class="stats-card bg-info">
                            <h5 class="card-title"><i class="fas fa-database me-2"></i>Total Data</h5>
                            <p class="card-text" id="totalData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-warning text-dark">
                            <h5 class="card-title"><i class="fas fa-plus-circle me-2"></i>Data Baru</h5>
                            <p class="card-text" id="newData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-danger">
                            <h5 class="card-title"><i class="fas fa-exclamation-triangle me-2"></i>Data Bermasalah</h5>
                            <p class="card-text" id="errorData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-success">
                            <h5 class="card-title"><i class="fas fa-clock me-2"></i>Interval Check</h5>
                            <p class="card-text">5 menit</p>
                        </div>
                    </div>
                </div>

                <!-- FFB Worker Stats Cards -->
                <div class="row mb-4" id="ffbworker-stats" style="display: none;">
                    <div class="col-md-3">
                        <div class="stats-card bg-info">
                            <h5 class="card-title"><i class="fas fa-database me-2"></i>Total Pekerja</h5>
                            <p class="card-text" id="totalFfbworkerData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-warning text-dark">
                            <h5 class="card-title"><i class="fas fa-user-tag me-2"></i>Divisi</h5>
                            <p class="card-text" id="ffbworkerDivisi">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-danger">
                            <h5 class="card-title"><i class="fas fa-exclamation-triangle me-2"></i>Perlu Diverifikasi</h5>
                            <p class="card-text" id="actionNeededFfbworker">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-success">
                            <h5 class="card-title"><i class="fas fa-clock me-2"></i>Interval Check</h5>
                            <p class="card-text">5 menit</p>
                        </div>
                    </div>
                </div>

                <!-- GWScanner Stats Cards -->
                <div class="row mb-4" id="gwscanner-stats" style="display: none;">
                    <div class="col-md-3">
                        <div class="stats-card bg-info">
                            <h5 class="card-title"><i class="fas fa-database me-2"></i>Total Data</h5>
                            <p class="card-text" id="totalGwscannerData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-warning text-dark">
                            <h5 class="card-title"><i class="fas fa-clone me-2"></i>Data Duplikat</h5>
                            <p class="card-text" id="duplicateGwscannerData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-danger">
                            <h5 class="card-title"><i class="fas fa-exclamation-triangle me-2"></i>Perlu Diverifikasi</h5>
                            <p class="card-text" id="actionNeededGwscannerData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-success">
                            <h5 class="card-title"><i class="fas fa-clock me-2"></i>Interval Check</h5>
                            <p class="card-text">5 menit</p>
                        </div>
                    </div>
                </div>
                
                <!-- GWScanner-Overtime Stats Cards -->
                <div class="row mb-4 gwscanner-overtime-stats" id="gwscanner-overtime-stats" style="display: none;">
                    <div class="col-md-3">
                        <div class="stats-card bg-info">
                            <h5 class="card-title"><i class="fas fa-database me-2"></i>Total Data Tidak Sinkron</h5>
                            <p class="card-text" id="totalGwscannerOvertimeData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-warning text-dark">
                            <h5 class="card-title"><i class="fas fa-sync-alt me-2"></i>Data di Overtime</h5>
                            <p class="card-text" id="errorGwscannerOvertimeData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-danger">
                            <h5 class="card-title"><i class="fas fa-exclamation-triangle me-2"></i>Perlu Disinkronkan</h5>
                            <p class="card-text" id="actionNeededGwscannerOvertimeData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-success">
                            <h5 class="card-title"><i class="fas fa-clock me-2"></i>Terakhir Diperbarui</h5>
                            <p class="card-text" id="lastUpdatedGwscannerOvertime">-</p>
                        </div>
                    </div>
                </div>
                
                <!-- GWScanner-Taskreg Stats Cards -->
                <div class="row mb-4 gwscanner-taskreg-stats" id="gwscanner-taskreg-stats" style="display: none;">
                    <div class="col-md-3">
                        <div class="stats-card bg-info">
                            <h5 class="card-title"><i class="fas fa-database me-2"></i>Total Data Tidak Sinkron</h5>
                            <p class="card-text" id="totalGwscannerTaskregData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-warning text-dark">
                            <h5 class="card-title"><i class="fas fa-clipboard-list me-2"></i>Data di GWScanner</h5>
                            <p class="card-text" id="errorGwscannerTaskregData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-danger">
                            <h5 class="card-title"><i class="fas fa-exclamation-triangle me-2"></i>Perlu Disinkronkan</h5>
                            <p class="card-text" id="actionNeededGwscannerTaskregData">0</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card bg-success">
                            <h5 class="card-title"><i class="fas fa-clock me-2"></i>Terakhir Diperbarui</h5>
                            <p class="card-text" id="lastUpdatedGwscannerTaskreg">-</p>
                        </div>
                    </div>
                </div>

                <!-- Grafik Jumlah Data - Dipindahkan ke bagian atas -->
                <div class="row mb-4" id="old-chart-container" style="display: none;">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Grafik Jumlah Data</h5>
                            </div>
                            <div class="card-body">
                                <canvas id="dataChangeChart" height="100"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Content -->
                <div class="tab-content" id="dataTypeTabContent">
                    
                    <!-- Tunjangan Beras Tab -->
                    <div class="tab-pane fade show active" id="tunjangan-data" role="tabpanel">
                        <!-- Container untuk Tunjangan Beras -->
                        
                        <div id="tunjangan-beras-container" class="data-container">
                            <!-- Data tunjangan akan dimuat secara dinamis oleh JavaScript -->
                            <div class="alert alert-info loading-indicator">
                                <div class="d-flex align-items-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <div>
                                        <strong>Memuat data tunjangan beras...</strong>
                                        <div id="tunjangan-loading-status" class="mt-2 small text-muted"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- BPJS Tab -->
                    <div class="tab-pane fade" id="bpjs-data" role="tabpanel">
                        <!-- Container untuk BPJS -->
                        
                        <div id="bpjs-container" class="data-container">
                            <!-- Data BPJS akan dimuat secara dinamis oleh JavaScript -->
                            <div class="alert alert-info loading-indicator">
                                <div class="d-flex align-items-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <div>
                                        <strong>Memuat data BPJS...</strong>
                                        <div id="bpjs-loading-status" class="mt-2 small text-muted"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- FFB Worker Tab (Non-Pemanen dengan Ripe) -->
                    <div class="tab-pane fade" id="ffbworker-data" role="tabpanel">
                        <!-- Container untuk FFB Worker -->
                        
                        <div id="ffb-worker-container" class="data-container">
                            <!-- Data FFB Worker akan dimuat secara dinamis oleh JavaScript -->
                            <div class="alert alert-info loading-indicator">
                                <div class="d-flex align-items-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <div>
                                        <strong>Memuat data FFB Worker...</strong>
                                        <div id="ffbworker-loading-status" class="mt-2 small text-muted"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- GWScanner Tab -->
                    <div class="tab-pane fade" id="gwscanner-data" role="tabpanel">
                        <div class="d-flex justify-content-end mb-3">
                            <button id="refreshGWScannerBtn" class="btn btn-primary">
                                <i class="fas fa-sync-alt me-2"></i>Refresh Data GWScanner
                            </button>
                        </div>
                        
                        <!-- Container untuk GWScanner -->
                        <div id="gwscanner-container" class="data-container">
                            <!-- Data GWScanner akan dimuat secara dinamis oleh JavaScript -->
                            <div class="alert alert-info loading-indicator">
                                <div class="d-flex align-items-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <div>
                                        <strong>Memuat data duplikat GWScanner...</strong>
                                        <div id="gwscanner-loading-status" class="mt-2 small text-muted"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- GWScanner-Overtime Tab -->
                    <div class="tab-pane fade" id="gwscanner-overtime-data" role="tabpanel">
                        <!-- Container untuk GWScanner Overtime -->
                        
                        <div id="gwscanner-overtime-container" class="data-container">
                            <!-- Data GWScanner-Overtime akan dimuat secara dinamis oleh JavaScript -->
                            <div class="alert alert-info loading-indicator">
                                <div class="d-flex align-items-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <div>
                                        <strong>Memuat data GWScanner-Overtime yang tidak sinkron...</strong>
                                        <div id="gwscanner-overtime-loading-status" class="mt-2 small text-muted"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- GWScanner-Taskreg Tab -->
                    <div class="tab-pane fade" id="gwscanner-taskreg-data" role="tabpanel">
                        <!-- Container untuk GWScanner Taskreg -->
                        
                        <div id="gwscanner-taskreg-container" class="data-container">
                            <!-- Data GWScanner-Taskreg akan dimuat secara dinamis oleh JavaScript -->
                            <div class="alert alert-info loading-indicator">
                                <div class="d-flex align-items-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <div>
                                        <strong>Memuat data GWScanner-Taskreg yang tidak sinkron...</strong>
                                        <div id="gwscanner-taskreg-loading-status" class="mt-2 small text-muted"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- History Tab -->
                    <div class="tab-pane fade" id="history-data" role="tabpanel">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table id="historyTable" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Timestamp</th>
                                                <th>Jenis Data</th>
                                                <th>Jumlah Record</th>
                                                <th>Ukuran File</th>
                                                <th>Aksi</th>
                                            </tr>
                                        </thead>
                                        <tbody id="historyTableBody">
                                            <!-- Data akan diisi melalui AJAX -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tab Konfigurasi -->
            <div class="tab-pane fade" id="config-section" role="tabpanel" aria-labelledby="config-tab">
                <h1 class="h3 mb-4">Konfigurasi Database</h1>
                
                    <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Pengaturan Interval</h5>
                        </div>
                        <div class="card-body">
                        <form class="config-form">
                                <div class="mb-3">
                                <label for="scheduleInterval" class="form-label">Interval Refresh Data</label>
                                    <div class="input-group">
                                    <input type="number" class="form-control" id="scheduleInterval" min="1" max="60" value="5">
                                    <span class="input-group-text">menit</span>
                                    </div>
                                <div class="form-text">Tentukan seberapa sering data akan di-refresh secara otomatis.</div>
                                </div>
                            
                                <div class="mb-3">
                                <label for="cacheExpiration" class="form-label">Durasi Cache</label>
                                    <div class="input-group">
                                    <input type="number" class="form-control" id="cacheExpiration" min="1" max="60" value="10">
                                    <span class="input-group-text">menit</span>
                                    </div>
                                <div class="form-text">Berapa lama data akan disimpan di cache sebelum dimuat ulang.</div>
                                </div>
                            
                            <div class="mb-3 form-check">
                                <input type="checkbox" class="form-check-input" id="useLocalCache" checked>
                                <label class="form-check-label" for="useLocalCache">Gunakan Local Cache</label>
                                <div class="form-text">Aktifkan untuk menggunakan cache lokal untuk mengurangi beban server.</div>
                        </div>
                        
                            <button type="button" id="saveConfigBtn" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i>Simpan Konfigurasi
                            </button>
                        </form>
                            </div>
                        </div>
                        
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Database Status</h5>
                                    </div>
                    <div class="card-body">
                                    <div class="mb-3">
                            <strong>Status Koneksi:</strong> 
                            <span id="db-connection-status" class="ms-2">
                                <span class="badge bg-success"><i class="fas fa-check-circle me-1"></i>Terhubung</span>
                            </span>
                                    </div>
                                    <div class="mb-3">
                            <strong>Last Check:</strong> <span id="lastCheckTime">-</span>
                                    </div>
                                    <div class="mb-3">
                            <strong>Cache Status:</strong>
                            <span id="cache-status" class="ms-2">
                                <span class="badge bg-info"><i class="fas fa-hdd me-1"></i>Valid</span>
                            </span>
                        </div>
                        
                        <button type="button" id="clearCacheBtn" class="btn btn-warning">
                            <i class="fas fa-trash-alt me-1"></i>Hapus Cache
                                </button>
                        <button type="button" id="testConnectionBtn" class="btn btn-info ms-2">
                            <i class="fas fa-plug me-1"></i>Test Koneksi
                                </button>
                            </div>
                        </div>
            </div>
        </div>

        <!-- Grafik Timeline History - Dipindahkan ke bagian bawah -->
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Grafik Timeline History</h5>
                        <div>
                            <select id="historyTimeRange" class="form-select form-select-sm me-2 d-inline-block" style="width: auto;">
                                <option value="24">24 Jam Terakhir</option>
                                <option value="72">3 Hari Terakhir</option>
                                <option value="168">7 Hari Terakhir</option>
                                <option value="720">30 Hari Terakhir</option>
                                <option value="all" selected>Semua Data</option>
                            </select>
                            <button id="loadHistoryBtn" class="btn btn-sm btn-primary">
                                <i class="fas fa-sync-alt me-1"></i> Muat History
                            </button>
                        </div>
                    </div>
                    <div class="card-body timeline-chart-container">
                        <canvas id="historyChart" height="100"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="last-check">
            <i class="fas fa-history me-2"></i>Last Check: <span id="lastCheckTimeFooter"><%= lastCheck %></span>
        </div>

        <button id="refreshBtn" class="btn btn-primary refresh-button">
            <i class="fas fa-sync-alt me-2"></i>Refresh Data
        </button>
    </div>

    <!-- Modal untuk detail history -->
    <div class="modal fade" id="historyDetailModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="historyDetailTitle">Detail History</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <strong>Timestamp:</strong> <span id="historyDetailTimestamp"></span>
                    </div>
                    <div class="mb-3">
                        <strong>Jenis Data:</strong> <span id="historyDetailType"></span>
                    </div>
                    <div class="mb-3">
                        <strong>Jumlah Record:</strong> <span id="historyDetailCount"></span>
                    </div>
                    <div class="mb-3">
                        <strong>Data:</strong>
                        <div id="historyDetailData" class="mt-2 p-3 bg-light rounded"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Base JavaScript Dependencies -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- DataTables dengan export buttons -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>

    <!-- Chart.js untuk visualisasi data -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <!-- Aplikasi JavaScript -->
    <script src="/js/app.js"></script>
    <script src="/js/init.js"></script>
    <script src="/js/dynamic-summary.js"></script>
    
    <script>
      // Konfigurasi monitoring database
      window.dbConfig = {
        useLocalCache: true,
        showDebugInfo: false // set true untuk tampilkan debug info
      };
      
      // Status indikator untuk koneksi database
      function updateDbStatusIndicator(status) {
        const statusElement = document.getElementById('db-status-indicator');
        if (!statusElement) return;
        
        if (status === 'connected') {
          statusElement.innerHTML = '<span class="badge bg-success"><i class="fas fa-database me-1"></i> Terhubung</span>';
          // Sembunyikan loading overlay
          hideLoadingOverlay();
        } else if (status === 'loading') {
          statusElement.innerHTML = '<span class="badge bg-warning"><i class="fas fa-sync fa-spin me-1"></i> Menghubungkan...</span>';
          // Update teks di overlay
          updateLoadingText("Memuat data...");
        } else if (status === 'cached') {
          statusElement.innerHTML = '<span class="badge bg-info"><i class="fas fa-hdd me-1"></i> Menggunakan Cache</span>';
          // Sembunyikan loading overlay
          hideLoadingOverlay();
        } else {
          statusElement.innerHTML = '<span class="badge bg-danger"><i class="fas fa-times-circle me-1"></i> Terputus</span>';
        }
      }
      
      // Fungsi untuk sembunyikan loading overlay
      function hideLoadingOverlay() {
        const overlay = document.getElementById('loadingOverlay');
        if (overlay) {
          // Fadeout effect
          overlay.style.opacity = '0';
          setTimeout(() => {
            overlay.style.display = 'none';
            overlay.style.opacity = '1';
          }, 500);
        }
      }
      
      // Fungsi untuk update teks loading
      function updateLoadingText(text) {
        const loadingText = document.getElementById('loadingText');
        if (loadingText) {
          loadingText.textContent = text;
        }
      }
      
      // Listener untuk event cache dan koneksi
      document.addEventListener('DOMContentLoaded', function() {
        console.log("DOM Content Loaded - Inisialisasi monitoring koneksi DB");
        updateDbStatusIndicator('loading');
        
        // Update status ketika data summary dimuat
        document.addEventListener('dataSummaryLoaded', function(event) {
          console.log("Event dataSummaryLoaded - Update status koneksi");
          
          // Periksa apakah data berasal dari cache
          if (window.dataCache && window.dataCache.timestamp) {
            const cacheAge = Date.now() - window.dataCache.timestamp;
            console.log(`Cache age: ${Math.round(cacheAge/1000)} detik`);
            
            if (cacheAge < 10000) { // Kurang dari 10 detik = baru terhubung
              updateDbStatusIndicator('connected');
          } else {
              updateDbStatusIndicator('cached');
            }
          } else {
            updateDbStatusIndicator('connected');
          }
        });
        
        // Hide loading overlay after a timeout (fallback)
        setTimeout(function() {
          if (window.dataSummaryLoaded || window.dataPreloaded) {
            hideLoadingOverlay();
          }
        }, 5000);
      });
    </script>

    <!-- DataTables JavaScript -->
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.print.min.js"></script>

    <!-- Script untuk inisialisasi DataTables dengan scroll horizontal yang sinkron -->
    <script>
      $(document).ready(function() {
        // Konfigurasi default untuk semua tabel
        $.extend(true, $.fn.dataTable.defaults, {
          pageLength: 10,
          ordering: true,
          searching: true,
          paging: true,
          info: true,
          autoWidth: false,
          responsive: false,
          language: {
            lengthMenu: "Tampilkan _MENU_ data per halaman",
            zeroRecords: "Tidak ada data yang ditemukan",
            info: "Menampilkan halaman _PAGE_ dari _PAGES_",
            infoEmpty: "Tidak ada data yang tersedia",
            infoFiltered: "(difilter dari _MAX_ total data)",
            search: "Cari:",
            paginate: {
              first: "Pertama",
              last: "Terakhir",
              next: "Selanjutnya",
              previous: "Sebelumnya"
            }
          }
        });

        // Initialize tables but don't allow DataTables to apply scrolling
        $('.table').each(function() {
          const tableId = $(this).attr('id') || 'table-' + Math.random().toString(36).substring(2, 15);
          
          // Pastikan tabel memiliki ID
          if (!$(this).attr('id')) {
            $(this).attr('id', tableId);
          }
          
          // Inisialisasi DataTable tanpa fitur scroll
          const table = $(this).DataTable({
            pageLength: 10,
            ordering: true,
            searching: true,
            paging: true,
            info: true,
            autoWidth: false,
            responsive: false
          });
          
          // Tahap 1: Membuat struktur container scroll yang baru
          const tableParent = $(this).parent();
          
          // Jika tabel sudah berada dalam table-responsive, gunakan itu
          // Jika tidak, bungkus tabel dengan unified-scroll-container
          if (!tableParent.hasClass('table-responsive') && 
              !tableParent.hasClass('unified-scroll-container')) {
            $(this).wrap('<div class="unified-scroll-container"></div>');
          }
          
          // Tandai tabel sebagai fixed-header-table
          $(this).addClass('fixed-header-table');
          
          // Tahap 2: Hapus struktur DataTables untuk scrolling
          setTimeout(function() {
            // Identifikasi dan hapus struktur DataTables scroll yang membingungkan
            const $table = $('#' + tableId);
            const $wrapper = $table.closest('.dataTables_wrapper');
            
            // Hapus DataTables_scrollHead jika ada
            $wrapper.find('.dataTables_scrollHead').remove();
            
            // Hapus DataTables_scrollBody dan ambil kontennya
            const $scrollBody = $wrapper.find('.dataTables_scrollBody');
            if ($scrollBody.length) {
              const $scrollTable = $scrollBody.find('table');
              
              // Pindahkan tabel ke dalam unified-scroll-container
              if ($scrollTable.length) {
                $scrollTable.addClass('fixed-header-table');
                
                // Pastikan scroll container ada
                let $scrollContainer;
                if ($wrapper.find('.unified-scroll-container').length === 0) {
                  $scrollBody.wrap('<div class="unified-scroll-container"></div>');
                  $scrollContainer = $wrapper.find('.unified-scroll-container');
                } else {
                  $scrollContainer = $wrapper.find('.unified-scroll-container');
                }
                
                // Pastikan thead muncul dalam tabel utama
                if ($scrollTable.find('thead').length === 0) {
                  // Cari thead di tempat lain
                  const $thead = $wrapper.find('thead').first();
                  if ($thead.length) {
                    $scrollTable.prepend($thead);
                  }
                }
              }
              
              // Hapus div scrollBody setelah konten dipindahkan
              $scrollBody.contents().unwrap();
            }
            
            // Hapus semua event scroll yang ditambahkan DataTables
            $wrapper.find('.dataTables_scroll').off('scroll');
            $wrapper.find('.dataTables_scrollBody').off('scroll');
            
            // Paksa ukuran tabel 100%
            $table.css({
              'width': '100%',
              'margin': '0'
            });
            
            // Pastikan header tetap sticky
            $table.find('thead th').css({
              'position': 'sticky',
              'top': '0',
              'z-index': '10',
              'background-color': '#f8f9fa'
            });
            
            console.log('Table ' + tableId + ' restructured for unified scrolling');
          }, 500);
        });
      });
    </script>

    <!-- Inisialisasi mapping data dan bootstrap tabs -->
    <script>
      // Mapping untuk data
      window.dataMapping = {
        'tunjangan_beras_temp.json': {
          title: 'Tunjangan Beras',
          tableId: 'tunjangan-table',
          tabSelector: '#tunjangan-tab',
          filters: ['STATUS_TUNJANGAN'],
          containerId: 'tunjangan-container',
          valueFilters: ['NRP', 'NAMA', 'STATUS_TUNJANGAN']
        },
        'bpjs_temp.json': {
          title: 'BPJS',
          tableId: 'bpjs-table',
          tabSelector: '#bpjs-tab',
          filters: ['STATUS_BPJS'],
          containerId: 'bpjs-container',
          valueFilters: ['NRP', 'NO_PESERTA', 'STATUS_BPJS']
        },
        'gwscanner_temp.json': {
          title: 'GWScanner Duplicate',
          tableId: 'gwscanner-table',
          tabSelector: '#gwscanner-tab',
          filters: ['FROMOCCODE', 'TOOCCODE', 'TRANSSTATUS'],
          containerId: 'gwscanner-container',
          valueFilters: ['FROMOCCODE', 'TOOCCODE', 'SCANNERUSERCODE', 'WORKERCODE', 'JOBCODE']
        },
        'ffbworker_temp.json': {
          title: 'FFB Worker',
          tableId: 'ffb-worker-table',
          tabSelector: '#ffbworker-tab',
          filters: ['FROMOCCODE', 'REMARK'],
          containerId: 'ffb-worker-container',
          valueFilters: ['FROMOCCODE', 'WORKERCODE', 'FIELDNO', 'JOBCODE']
        },
        'gwscanner_overtime_not_sync_temp.json': {
          title: 'GWScanner Overtime Not Sync',
          tableId: 'gwscanner-overtime-table',
          tabSelector: '#gwscanner-overtime-tab',
          filters: ['STATUS_SYNC', 'RECORD_TAG_OVERTIME'],
          containerId: 'gwscanner-overtime-container',
          valueFilters: ['RECORD_TAG_OVERTIME', 'TAG_NO', 'WORKERCODE']
        },
        'gwscanner_taskreg_temp.json': {
          title: 'Checkroll Not Sync GWScanner Taskreg',
          tableId: 'gwscanner-taskreg-table',
          tabSelector: '#gwscanner-taskreg-tab',
          filters: ['WORKERCODE', 'TRANSSTATUS', 'RECORDTAG'],
          containerId: 'gwscanner-taskreg-container',
          valueFilters: ['WORKERCODE', 'FROMOCCODE', 'TOOCCODE', 'FIELDNO', 'JOBCODE']
        }
      };
      
      // Override dan sinkronisasi dataMapping dengan mapping lama yang ada di load-temp-data.js
      document.addEventListener('DOMContentLoaded', function() {
        console.log("Synchronizing dataMapping with existing mapping...");
        
        // Pastikan dataMapping tersedia di global scope
        if (window.dataMapping) {
          console.log("dataMapping loaded, synchronizing with old mapping...");
          
          // Sinkronisasi dengan mapping lama (jika ada)
          for (const [filename, mapping] of Object.entries(window.dataMapping)) {
            // Update containerId jika belum sesuai
            if (filename === 'tunjangan_beras_temp.json' && mapping.containerId !== 'tunjangan-data') {
              console.log(`Fixing containerId for ${filename}`);
              mapping.containerId = 'tunjangan-data';
            }
            
            if (filename === 'bpjs_temp.json' && mapping.containerId !== 'bpjs-data') {
              console.log(`Fixing containerId for ${filename}`);
              mapping.containerId = 'bpjs-data';
            }
            
            if (filename === 'gwscanner_temp.json' && mapping.containerId !== 'gwscanner-data') {
              console.log(`Fixing containerId for ${filename}`);
              mapping.containerId = 'gwscanner-data';
            }
            
            if (filename === 'ffbworker_temp.json' && mapping.containerId !== 'ffbworker-data') {
              console.log(`Fixing containerId for ${filename}`);
              mapping.containerId = 'ffbworker-data';
            }
            
            if (filename === 'gwscanner_overtime_not_sync_temp.json' && mapping.containerId !== 'gwscanner-overtime-data') {
              console.log(`Fixing containerId for ${filename}`);
              mapping.containerId = 'gwscanner-overtime-data';
            }
            
            if (filename === 'gwscanner_taskreg_temp.json' && mapping.containerId !== 'gwscanner-taskreg-data') {
              console.log(`Fixing containerId for ${filename}`);
              mapping.containerId = 'gwscanner-taskreg-data';
            }
          }
        }
      });
    </script>

    <!-- Script to fix table header scrolling -->
    <script>
      // Function to synchronize table headers with body when scrolling horizontally
      function setupSyncedTableScrolling() {
        // Wait for DOM to be fully loaded
        $(document).ready(function() {
          // After DataTables are initialized
          setTimeout(function() {
            // For each DataTable
            $('table.dataTable').each(function() {
              const tableId = $(this).attr('id');
              if (!tableId) return;
              
              // Get the scrollable body container
              const scrollBody = $(`#${tableId}`).closest('.dataTables_scrollBody');
              if (scrollBody.length === 0) return;
              
              // Get the header container
              const scrollHead = scrollBody.prev('.dataTables_scrollHead');
              if (scrollHead.length === 0) return;
              
              // Synchronize header scroll with body scroll
              scrollBody.on('scroll', function() {
                // Set header scroll position to match body scroll position
                scrollHead.scrollLeft($(this).scrollLeft());
              });
              
              // Ensure DataTable is properly sized
              if ($.fn.dataTable.tables) {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
              }
            });
          }, 500); // Delay to ensure DataTables are fully initialized
          
          // Handle window resize
          $(window).on('resize', function() {
            if ($.fn.dataTable.tables) {
              $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }
          });
        });
      }
      
      // Run the setup function
      setupSyncedTableScrolling();
      
      // Watch for tab changes and adjust tables
      document.addEventListener('shown.bs.tab', function(e) {
        if ($.fn.dataTable.tables) {
          setTimeout(function() {
            $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
          }, 200);
        }
      });
    </script>

    <!-- Bootstrap Bundle dengan Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- jQuery (diperlukan untuk DataTables) -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    
    <!-- DataTables dengan Bootstrap 5 -->
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.3.2/js/dataTables.fixedHeader.min.js"></script>
    
    <!-- Script load-temp-data.js di akhir, setelah semua script lain -->
    <script src="/js/init.js"></script>
    <script src="/js/load-temp-data.js"></script>

    <script>
        // Script debug telah dihapus
        document.addEventListener('DOMContentLoaded', function() {
            console.log("Debug: Setting up debug tools");
            
            // Observer untuk DataTables initialization
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.addedNodes && mutation.addedNodes.length > 0) {
                        for (let i = 0; i < mutation.addedNodes.length; i++) {
                            const node = mutation.addedNodes[i];
                            if (node.classList && node.classList.contains('dataTables_wrapper')) {
                                console.log("Debug: DataTable wrapper detected", node);
                            }
                        }
                    }
                });
            });
            
            // Observe the document body for changes
            observer.observe(document.body, { childList: true, subtree: true });
        });
                                                    <span class="badge bg-primary ms-1">0</span>
                                                </button>
                                                <div class="dropdown-menu filter-dropdown-menu p-3">
                                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                                        <h6 class="mb-0">Filter berdasarkan nilai kolom</h6>
                                                        <button class="btn btn-sm btn-outline-secondary">
                                                            <i class="fas fa-sync-alt me-1"></i>Reset
                                                        </button>
                                                    </div>
                                                    <div class="filter-content">Loading filter...</div>
                                                </div>
                                            </div>
                                        `;
                                        
                                        // Tambahkan setelah length selector
                                        lengthSelector.after(filterBtn);
                                    }
                                }
                            }
                        }
                    }
                });
            });
            
            // Mulai observasi
            observer.observe(document.body, { childList: true, subtree: true });
            
            // Fungsi untuk memicu ulang pembuatan filter setelah 3 detik
            setTimeout(function() {
                console.log("Debug: Attempting to reinitialize value filters");
                const tables = document.querySelectorAll('table.dataTable');
                tables.forEach(function(table) {
                    const containerId = table.closest('.tab-pane').id;
                    const tableId = table.id;
                    console.log(`Debug: Reinitializing filters for table ${tableId} in container ${containerId}`);
                    
                    // Temukan apakah ada data di tabel
                    if (window.loadedData) {
                        // Cari nama file berdasarkan tableId
                        let filename = '';
                        for (const [file, mapping] of Object.entries(window.dataMapping)) {
                            if (mapping.tableId === tableId) {
                                filename = file;
                                break;
                            }
                        }
                        
                        if (filename && window.loadedData[filename]) {
                            console.log(`Debug: Found data for ${filename}, attempting to create filters`);
                            
                            // Cari atau buat filter container
                            let filterContainer = document.getElementById(`value-filter-${containerId}`);
                            if (!filterContainer) {
                                console.log(`Debug: Filter container not found for ${containerId}, creating manually`);
                                
                                // Cari length selector
                                const lengthSelector = table.closest('.dataTables_wrapper').querySelector('.dataTables_length');
                                if (lengthSelector) {
                                    // Buat filter container
                                    filterContainer = document.createElement('div');
                                    filterContainer.id = `value-filter-${containerId}`;
                                    filterContainer.className = 'value-filter-dropdown-container d-inline-block ms-3';
                                    
                                    // Tambahkan setelah length selector
                                    lengthSelector.after(filterContainer);
                                    
                                    // Coba buat filter nilai
                                    if (typeof createValueFilters === 'function') {
                                        createValueFilters(window.loadedData[filename], window.dataMapping[filename], containerId);
                                    } else {
                                        console.error("Debug: createValueFilters function not available");
                                    }
                                }
                            }
                        }
                    }
                });
            }, 3000);
        });
    </script>

    <script>
        // Tambahkan tombol filter langsung di area tabel
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                // Tambahkan tombol filter langsung untuk setiap tab
                const tabs = document.querySelectorAll('.tab-pane');
                tabs.forEach(function(tab) {
                    if (!tab.id) return;
                    
                    // Skip monitoring tab
                    if (tab.id === 'monitoring-tab') return;
                    
                    // Buat direct filter button
                    const directFilterBtn = document.createElement('button');
                    directFilterBtn.className = 'btn btn-sm btn-outline-primary direct-filter-button';
                    directFilterBtn.innerHTML = '<i class="fas fa-filter me-1"></i> Filter Nilai';
                    directFilterBtn.setAttribute('data-container-id', tab.id);
                    
                    // Tambahkan ke tab
                    tab.style.position = 'relative';
                    tab.appendChild(directFilterBtn);
                    
                    // Event listener
                    directFilterBtn.addEventListener('click', function() {
                        const containerId = this.getAttribute('data-container-id');
                        
                        // Dapatkan data dan mapping untuk container ini
                        let tableId, filename, data, mapping;
                        
                        // Cari tabel di dalam container
                        const table = tab.querySelector('table.dataTable');
                        if (table) {
                            tableId = table.id;
                            
                            // Cari filename berdasarkan tableId
                            for (const [file, map] of Object.entries(window.dataMapping)) {
                                if (map.tableId === tableId) {
                                    filename = file;
                                    mapping = map;
                                    break;
                                }
                            }
                            
                            // Cari data untuk filename
                            if (filename && window.loadedData && window.loadedData[filename]) {
                                data = window.loadedData[filename];
                                
                                // Buat modal dengan filter
                                createFilterModal(data, mapping, containerId);
                            }
                        }
                    });
                });
            }, 2000);
        });
        
        // Fungsi untuk membuat modal filter
        function createFilterModal(data, mapping, containerId) {
            // Hapus modal sebelumnya jika ada
            const existingModal = document.getElementById('filterModal');
            if (existingModal) {
                existingModal.remove();
            }
            
            // Buat elemen modal
            const modalContainer = document.createElement('div');
            modalContainer.className = 'modal fade';
            modalContainer.id = 'filterModal';
            modalContainer.setAttribute('tabindex', '-1');
            modalContainer.setAttribute('aria-labelledby', 'filterModalLabel');
            modalContainer.setAttribute('aria-hidden', 'true');
            
            // HTML untuk modal
            modalContainer.innerHTML = `
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="filterModalLabel">Filter Nilai untuk ${mapping.title}</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div id="modal-filter-container"></div>
                        </div>
                    </div>
                </div>
            `;
            
            // Tambahkan modal ke body
            document.body.appendChild(modalContainer);
            
            // Inisialisasi modal
            const modal = new bootstrap.Modal(modalContainer);
            
            // Tunggu sebentar agar modal muncul dalam DOM
            setTimeout(function() {
                // Buat filter di dalam modal
                const filterContainer = document.getElementById('modal-filter-container');
                if (filterContainer) {
                    // Set ID yang sama seperti filter asli
                    filterContainer.id = `value-filter-${containerId}`;
                    
                    // Buat filter nilai
                    if (window.createValueFilters) {
                        window.createValueFilters(data, mapping, containerId);
                        
                        // Ubah posisi modal dropdown menu supaya tidak keluar dari modal
                        const dropdownMenus = modalContainer.querySelectorAll('.dropdown-menu');
                        dropdownMenus.forEach(menu => {
                            menu.style.position = 'static';
                            menu.style.width = '100%';
                            menu.style.marginTop = '10px';
                            menu.style.display = 'block';
                        });
                    }
                }
                
                // Tampilkan modal
                modal.show();
            }, 100);
        }
    </script>

    <!-- Tambahkan indicator status di navbar atau area yang terlihat -->
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 9999;">
      <div id="dataLoadingStatus" class="badge bg-info text-white shadow-sm py-2 px-3" style="display: none;">
        <i class="fas fa-sync fa-spin"></i> Memuat data...
      </div>
      <div id="dbConnectionStatus" class="badge bg-secondary text-white shadow-sm py-2 px-3">
        <i class="fas fa-circle-notch fa-spin"></i> Memeriksa koneksi...
      </div>
    </div>

    <!-- Tambahkan script untuk mengelola status loading -->
    <script>
      // Fungsi untuk memperbarui status koneksi database
      function updateDbConnectionStatus() {
        const statusEl = document.getElementById('dbConnectionStatus');
        if (!statusEl) return;
        
        // Cek status cache
        if (window.dataCache && window.dataCache.timestamp) {
          const now = Date.now();
          const cacheAge = now - window.dataCache.timestamp;
          const cacheAgeSeconds = Math.round(cacheAge / 1000);
          
          console.log(`Cache age when updating DB status: ${cacheAgeSeconds} detik`);
          
          if (cacheAge < window.dataCache.expiresIn) {
            // Cache masih valid
            statusEl.className = 'badge bg-success text-white shadow-sm py-2 px-3';
            statusEl.innerHTML = `<i class="fas fa-check-circle"></i> Database terhubung (cache ${cacheAgeSeconds}s)`;
            
            // Sembunyikan setelah beberapa detik
            setTimeout(() => {
              statusEl.style.opacity = '0.7';
            }, 3000);
          } else {
            // Cache sudah expired
            statusEl.className = 'badge bg-warning text-dark shadow-sm py-2 px-3';
            statusEl.innerHTML = `<i class="fas fa-exclamation-circle"></i> Cache kedaluwarsa (${cacheAgeSeconds}s)`;
          }
        } else if (window.dataSummaryLoaded) {
          // Data sudah dimuat tapi tidak ada timestamp
          statusEl.className = 'badge bg-success text-white shadow-sm py-2 px-3';
          statusEl.innerHTML = `<i class="fas fa-check-circle"></i> Database terhubung`;
        } else {
          // Tidak ada data yang dimuat
          statusEl.className = 'badge bg-danger text-white shadow-sm py-2 px-3';
          statusEl.innerHTML = `<i class="fas fa-times-circle"></i> Database tidak terhubung`;
        }
      }
      
      // Listen untuk event ketika data summary dimuat
      document.addEventListener('dataSummaryLoaded', function(e) {
        console.log("Event dataSummaryLoaded - Update status koneksi");
        updateDbConnectionStatus();
        
        // Periksa umur cache
        if (window.dataCache && window.dataCache.timestamp) {
          const cacheAgeSeconds = Math.round((Date.now() - window.dataCache.timestamp) / 1000);
          console.log(`Cache age: ${cacheAgeSeconds} detik`);
        }
      });
      
      // Init saat DOM selesai dimuat
      document.addEventListener('DOMContentLoaded', function() {
        console.log("DOM Content Loaded - Inisialisasi monitoring koneksi DB");
        // Inisialisasi status
        updateDbConnectionStatus();
        
        // Update status setiap 30 detik
        setInterval(updateDbConnectionStatus, 30000);
      });
    </script>

    <!-- Fix for DataTables synchronization issues -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Tunggu semua tabel terload
        setTimeout(function() {
          // Hapus semua fitur scroll bawaan DataTables
          $('.dataTables_scrollHead, .dataTables_scrollBody').css({
            'overflow': 'visible',
            'width': '100%',
            'max-width': 'none'
          });
          
          // Pastikan tabel memiliki width:100%
          $('table.dataTable').css({
            'width': '100% !important',
            'max-width': 'none'
          });
          
          // Pastikan wrapper menggunakan browser native scroll
          $('.table-responsive').css({
            'overflow-x': 'auto',
            'width': '100%',
            'position': 'relative'
          });
          
          // Pastikan semua kolom pada tabel dataTables disesuaikan
          $('.dataTable').each(function() {
            if ($.fn.DataTable.isDataTable(this)) {
              $(this).DataTable().columns.adjust();
            }
          });
          
          // Pastikan header tetap saat scroll
          $('table.dataTable thead th').css({
            'position': 'sticky',
            'top': '0',
            'z-index': '2',
            'background': '#f8f9fa'
          });
          
          console.log('DataTables scroll fix applied');
        }, 1000);
        
        // Fix untuk saat ganti tab
        $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function(e) {
          setTimeout(function() {
            $('.dataTable').each(function() {
              if ($.fn.DataTable.isDataTable(this)) {
                $(this).DataTable().columns.adjust();
              }
            });
          }, 200);
        });
        
        // Hapus semua event handler scroll yang ditambahkan DataTables
        setTimeout(function() {
          // Hapus semua event handler scroll dari DataTables
          $('.dataTables_scrollBody').off('scroll');
          
          // Gunakan event handler scroll browser asli
          $('.table-responsive').on('scroll', function() {
            // Tidak perlu melakukan apa-apa, browser akan melakukan scroll secara native
            console.log('Table scrolled naturally');
          });
        }, 1500);
      });
    </script>
    
    <!-- Fix untuk memastikan thead dan tbody selalu menyatu saat scroll -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Fungsi yang akan menggabungkan thead dan tbody
        function unifyTableScrolling() {
          console.log('Applying unified table scrolling fix...');
          
          // Proses setiap tabel DataTables
          $('.dataTable').each(function() {
            const table = $(this);
            const wrapper = table.closest('.dataTables_wrapper');
            const tableId = table.attr('id') || 'table-' + Math.floor(Math.random() * 1000);
            
            // Jika tabel belum memiliki ID, berikan ID
            if (!table.attr('id')) {
              table.attr('id', tableId);
            }
            
            console.log(`Processing table: ${tableId}`);
            
            // 1. Temukan scrollHead dan scrollBody jika ada
            const scrollHead = wrapper.find('.dataTables_scrollHead');
            const scrollBody = wrapper.find('.dataTables_scrollBody');
            
            if (scrollHead.length && scrollBody.length) {
              console.log(`Table ${tableId} has separate scrollHead and scrollBody`);
              
              // 2. Ambil thead dari scrollHead
              const thead = scrollHead.find('thead').clone();
              
              // 3. Ambil tbody dari scrollBody
              const tbody = scrollBody.find('tbody').clone();
              
              // 4. Buat tabel baru yang menggabungkan keduanya
              const newTable = $('<table class="table table-striped dataTable" id="unified-' + tableId + '"></table>');
              newTable.append(thead);
              newTable.append(tbody);
              
              // 5. Bungkus dengan container scroll yang tepat
              const scrollContainer = $('<div class="unified-scroll-container"></div>');
              scrollContainer.append(newTable);
              
              // 6. Hapus struktur lama dan tambahkan yang baru
              scrollHead.remove();
              
              // 7. Ganti scrollBody dengan container baru
              scrollBody.replaceWith(scrollContainer);
              
              // 8. Terapkan style untuk memastikan header tetap sticky
              newTable.find('thead th').css({
                'position': 'sticky',
                'top': '0',
                'z-index': '10',
                'background-color': '#f8f9fa'
              });
              
              // 9. Pindahkan referensi DataTable dari tabel lama ke tabel baru
              if ($.fn.DataTable.isDataTable('#' + tableId)) {
                const dt = $('#' + tableId).DataTable();
                $.data(newTable[0], 'dt', dt);
                
                // Perbaiki referensi tabel dalam DataTable API
                dt.table().node = function() { return newTable[0]; };
              }
              
              console.log(`Table ${tableId} unified successfully`);
            } else {
              // Jika tidak ada scrollHead/scrollBody, pastikan tabel dibungkus dengan container scroll
              if (!table.parent().hasClass('unified-scroll-container')) {
                table.wrap('<div class="unified-scroll-container"></div>');
                console.log(`Table ${tableId} wrapped in unified-scroll-container`);
              }
              
              // Pastikan header tetap sticky
              table.find('thead th').css({
                'position': 'sticky',
                'top': '0',
                'z-index': '10',
                'background-color': '#f8f9fa'
              });
            }
          });
          
          // Filter functionality has been removed
          console.log("Table structure unified without filters");
        }
        
        // Filter functionality has been removed
        
        // Jalankan fix setelah tabel dimuat
        setTimeout(unifyTableScrolling, 1000);
        
        // Jalankan kembali ketika tab diubah
        $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function() {
          setTimeout(function() {
            unifyTableScrolling();
            rehookFilters();
          }, 500);
        });
        
        // Ulangi beberapa kali untuk memastikan perubahan diterapkan
        setTimeout(unifyTableScrolling, 2000);
        setTimeout(unifyTableScrolling, 4000);
      });
    </script>
    
    <!-- Filter functionality has been removed -->

    <!-- Filter functionality has been removed -->
    
    <!-- End of the added script -->
    
    <!-- Filter functionality has been removed -->
    <script>
    console.log('All filter functionality has been removed');
    </script>
</body>
</html>